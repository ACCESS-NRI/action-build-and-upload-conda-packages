name: Test action

on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch:
  workflow_call:

jobs:
  setup-conda-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ci/environment.yml
          cache-environment-key: environment-${{ hashFiles('ci/environment.yml') }}

  test-action:
    name: Test ${{ matrix.id }}
    runs-on: ubuntu-latest
    needs: setup-conda-build
    concurrency:
      group: branch-${{ github.ref }}-${{ matrix.id }} # Cancel past jobs coming from the same branch
      cancel-in-progress: true
    env:
      COMMON_INPUTS: >-
        "meta_yaml_dir": ci/asyncio_recipe,
        "upload": false
    strategy:
      fail-fast: false
      matrix:
        include:
          - id: 1
            label: "Test: '.tar.bz2' package format."
            inputs: >-
                "conda_build_args": --package-format .tar.bz2
            expected_outputs: >-
                linux-64/asyncio-3.4.1-py311_0.tar.bz2
                linux-64/asyncio-3.4.1-py312_0.tar.bz2
          - id: 2
            label: "Test: Conversion to all platforms, '.conda' package format."
            inputs: >-
                "platform_all": true,
                "conda_build_args": --package-format .conda
            expected_outputs: >-
              linux-32/asyncio-3.4.1-py311_0.conda
              linux-64/asyncio-3.4.1-py311_0.conda
              linux-aarch64/asyncio-3.4.1-py311_0.conda
              linux-armv6l/asyncio-3.4.1-py311_0.conda
              linux-armv7l/asyncio-3.4.1-py311_0.conda
              linux-ppc64/asyncio-3.4.1-py311_0.conda
              linux-ppc64le/asyncio-3.4.1-py311_0.conda
              linux-s390x/asyncio-3.4.1-py311_0.conda
              osx-64/asyncio-3.4.1-py311_0.conda
              osx-arm64/asyncio-3.4.1-py311_0.conda
              win-32/asyncio-3.4.1-py311_0.conda
              win-64/asyncio-3.4.1-py311_0.conda
              win-arm64/asyncio-3.4.1-py311_0.conda
              linux-32/asyncio-3.4.1-py312_0.conda
              linux-64/asyncio-3.4.1-py312_0.conda
              linux-aarch64/asyncio-3.4.1-py312_0.conda
              linux-armv6l/asyncio-3.4.1-py312_0.conda
              linux-armv7l/asyncio-3.4.1-py312_0.conda
              linux-ppc64/asyncio-3.4.1-py312_0.conda
              linux-ppc64le/asyncio-3.4.1-py312_0.conda
              linux-s390x/asyncio-3.4.1-py312_0.conda
              osx-64/asyncio-3.4.1-py312_0.conda
              osx-arm64/asyncio-3.4.1-py312_0.conda
              win-32/asyncio-3.4.1-py312_0.conda
              win-64/asyncio-3.4.1-py312_0.conda
              win-arm64/asyncio-3.4.1-py312_0.conda
          - id: 3
            label: "Test: Conversion to specific platforms through 'platform_*' inputs and 'conda_convert_args' inputs, '.tar.bz2' package format."
            inputs: >-
                "platform_win-32": true,
                "platform_win-64": true,
                "platform_osx-64": true,
                "conda_convert_args": --platform win-32 -p osx-arm64,
                "conda_build_args": --package-format .tar.bz2
            expected_outputs: >-
              linux-64/asyncio-3.4.1-py311_0.tar.bz2
              osx-64/asyncio-3.4.1-py311_0.tar.bz2
              osx-arm64/asyncio-3.4.1-py311_0.tar.bz2
              win-32/asyncio-3.4.1-py311_0.tar.bz2
              win-64/asyncio-3.4.1-py311_0.tar.bz2
              linux-64/asyncio-3.4.1-py312_0.tar.bz2
              osx-64/asyncio-3.4.1-py312_0.tar.bz2
              osx-arm64/asyncio-3.4.1-py312_0.tar.bz2
              win-32/asyncio-3.4.1-py312_0.tar.bz2
              win-64/asyncio-3.4.1-py312_0.tar.bz2
          - id: 4
            label: "Test: Conversion to specific platforms only through 'conda_convert_args' inputs, '.tar.bz2' package format."
            inputs: >-
                "conda_convert_args": --platform win-32 -p osx-arm64,
                "conda_build_args": --package-format .tar.bz2
            expected_outputs: >-
                linux-64/asyncio-3.4.1-py311_0.tar.bz2
                osx-arm64/asyncio-3.4.1-py311_0.tar.bz2
                win-32/asyncio-3.4.1-py311_0.tar.bz2
                linux-64/asyncio-3.4.1-py312_0.tar.bz2
                osx-arm64/asyncio-3.4.1-py312_0.tar.bz2
                win-32/asyncio-3.4.1-py312_0.tar.bz2
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ci/environment.yml
          cache-environment-key: environment-${{ hashFiles('ci/environment.yml') }}

      - name: ${{ matrix.label }}
        id: test-action
        uses: jenseng/dynamic-uses@5175289a9a87978dcfcb9cf512b821d23b2a53eb #v1 - Needed because github context is not supported within step.uses (https://github.com/actions/runner/issues/895)
        with: 
          uses: ${{ github.repository }}@${{github.sha}}
          with: >-
            {
              ${{ env.COMMON_INPUTS }},
              ${{ matrix.inputs }}
            }

      - name: Verify outputs
        env:
          EXPECTED_OUTPUTS: ${{ matrix.expected_outputs }}
          OUTPUT_PATHS: ${{ fromJson(steps.test-action.outputs.outputs).paths }} # https://github.com/jenseng/dynamic-uses?tab=readme-ov-file#gotchaslimitations
        run: |
          # Remove the folder name from the path, only leaving the architecture folder (e.g. linux-64/package_name)
          while IFS= read -r path; do
            output_paths+=($(basename "$(dirname "$path")")/$(basename "$path"))
          done <<< '${{ env.OUTPUT_PATHS }}'
          # Sort output and expected paths alphabetically, to make the comparison easier
          output_paths=($(printf "%s\n" "${output_paths[@]}" | sort))
          expected_paths=($(printf "%s\n" ${{ env.EXPECTED_OUTPUTS }} | sort))
          if [[ "${output_paths[@]}" != "${expected_paths[@]}" ]]; then
            echo "::error:: The outputs do not match the expected outputs."
            echo "Expected outputs:"
            printf "%s\n" "${expected_paths[@]}"
            echo "Actual outputs:"
            printf "%s\n" "${output_paths[@]}"
            echo "Difference:"
            diff <(printf "%s\n" "${expected_paths[@]}") <(printf "%s\n" "${output_paths[@]}")
            exit 1
          fi


